/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package s_engineering_2.pkg2_bics_librarysys;

import com.toedter.calendar.JDateChooser;
import java.awt.Component;
import java.awt.Container;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author badyo
 */
public class menu extends javax.swing.JFrame {

    /**
     * Creates new form menu
     */
    public menu() {
        initComponents();
    }
Connector con = new Connector();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        evB = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        finB = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        BOOKS = new javax.swing.JInternalFrame();
        books = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        BID = new javax.swing.JTextField();
        BNameS = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        BName = new javax.swing.JTextField();
        OfNew1 = new javax.swing.JButton();
        OfCancel1 = new javax.swing.JButton();
        OfSave1 = new javax.swing.JButton();
        OfUpdate1 = new javax.swing.JButton();
        OfDelete1 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        BTable = new javax.swing.JTable();
        ORefresh1 = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        BDate = new com.toedter.calendar.JDateChooser();
        jLabel56 = new javax.swing.JLabel();
        BDateS = new com.toedter.calendar.JDateChooser();
        HOME = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        PanelR = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        SID = new javax.swing.JTextField();
        SNameSearch = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        SNAME = new javax.swing.JTextField();
        OfNew = new javax.swing.JButton();
        OfCancel = new javax.swing.JButton();
        OfSave = new javax.swing.JButton();
        OfUpdate = new javax.swing.JButton();
        OfDelete = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        STable = new javax.swing.JTable();
        ORefresh = new javax.swing.JButton();
        SNUM = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        SIDSearch = new javax.swing.JTextField();
        SET = new javax.swing.JInternalFrame();
        jPanel11 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        ps = new javax.swing.JComboBox<>();
        cp = new javax.swing.JTextField();
        np = new javax.swing.JTextField();
        rp = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        setB = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        SERVICES = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        SBID = new javax.swing.JTextField();
        BIDS = new javax.swing.JTextField();
        SBDate = new com.toedter.calendar.JDateChooser();
        SBRDate = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TSBook = new javax.swing.JTable();
        BNew = new javax.swing.JButton();
        BSave = new javax.swing.JButton();
        BUpdate = new javax.swing.JButton();
        BDelete = new javax.swing.JButton();
        BCancel = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        BOID = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        BoTable = new javax.swing.JTable();
        ORefresh2 = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        BoSearch = new javax.swing.JTextField();
        hidX = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel81 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        RSBID = new javax.swing.JTextField();
        RBID = new javax.swing.JTextField();
        RDate = new com.toedter.calendar.JDateChooser();
        jPanel20 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jLabel105 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        TSBook1 = new javax.swing.JTable();
        BNew1 = new javax.swing.JButton();
        BSave1 = new javax.swing.JButton();
        BUpdate1 = new javax.swing.JButton();
        BCancel1 = new javax.swing.JButton();
        jLabel106 = new javax.swing.JLabel();
        ROID = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        RoTable = new javax.swing.JTable();
        ORefresh5 = new javax.swing.JButton();
        jLabel107 = new javax.swing.JLabel();
        BoSearch1 = new javax.swing.JTextField();
        hidX1 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        BoTable1 = new javax.swing.JTable();
        LOGOUT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(59, 119, 209));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(47, 80, 183));
        jLabel1.setFont(new java.awt.Font("Zekton Rg", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LIBRARY MANAGEMENT SYSTEM");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 47));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/s_engineering_2/pkg2_bics_librarysys/HOM2.png"))); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 140, 90));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("REGISTRATION");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(47, 80, 183), 2, true));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 139, 30));

        evB.setBackground(new java.awt.Color(255, 255, 255));
        evB.setForeground(new java.awt.Color(255, 255, 255));
        evB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/s_engineering_2/pkg2_bics_librarysys/291400-books_2-512(1).png"))); // NOI18N
        evB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        evB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evBActionPerformed(evt);
            }
        });
        jPanel1.add(evB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 140, 90));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("BOOKS MANAGEMENT");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(47, 80, 183), 2, true));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 140, 30));

        finB.setBackground(new java.awt.Color(255, 255, 255));
        finB.setForeground(new java.awt.Color(255, 255, 255));
        finB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/s_engineering_2/pkg2_bics_librarysys/chat3.png"))); // NOI18N
        finB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        finB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finBActionPerformed(evt);
            }
        });
        jPanel1.add(finB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 140, 90));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("SERVICES");
        jLabel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(47, 80, 183), 2, true));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 140, 30));

        BOOKS.setTitle("BOOKS MANAGEMENT");
        BOOKS.setVisible(false);

        books.setBackground(new java.awt.Color(255, 255, 255));

        jLabel49.setText("BOOK ID");

        BID.setEditable(false);
        BID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BIDActionPerformed(evt);
            }
        });

        BNameS.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                BNameSCaretUpdate(evt);
            }
        });

        jLabel52.setText("BOOK TITLE");

        BName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BNameActionPerformed(evt);
            }
        });

        OfNew1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfNew1.setText("New");
        OfNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfNew1ActionPerformed(evt);
            }
        });

        OfCancel1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfCancel1.setText("Cancel");
        OfCancel1.setEnabled(false);
        OfCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfCancel1ActionPerformed(evt);
            }
        });

        OfSave1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfSave1.setText(" Save New");
        OfSave1.setEnabled(false);
        OfSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfSave1ActionPerformed(evt);
            }
        });

        OfUpdate1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfUpdate1.setText("Update");
        OfUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfUpdate1ActionPerformed(evt);
            }
        });

        OfDelete1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfDelete1.setText("Delete");
        OfDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfDelete1ActionPerformed(evt);
            }
        });

        jLabel53.setText("DATE RECIEVED");

        BTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "BookID", "Book Title", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(BTable);

        ORefresh1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        ORefresh1.setText("Refresh Table");
        ORefresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ORefresh1ActionPerformed(evt);
            }
        });

        jLabel55.setText("Search by Name");

        BDate.setDateFormatString("yyyy-MM-dd");

        jLabel56.setText("Search Date");

        BDateS.setDateFormatString("yyyy-MM-dd");
        BDateS.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                BDateSPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout booksLayout = new javax.swing.GroupLayout(books);
        books.setLayout(booksLayout);
        booksLayout.setHorizontalGroup(
            booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(booksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, booksLayout.createSequentialGroup()
                        .addComponent(jScrollPane6)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, booksLayout.createSequentialGroup()
                        .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BNameS, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BDateS, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                        .addGap(150, 150, 150))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, booksLayout.createSequentialGroup()
                        .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(booksLayout.createSequentialGroup()
                                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BName))
                            .addGroup(booksLayout.createSequentialGroup()
                                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(booksLayout.createSequentialGroup()
                                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BID)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(booksLayout.createSequentialGroup()
                                .addComponent(OfNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OfCancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(booksLayout.createSequentialGroup()
                                .addComponent(OfSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OfDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(OfUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(331, 331, 331))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, booksLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ORefresh1)
                .addGap(429, 429, 429))
        );
        booksLayout.setVerticalGroup(
            booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(booksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(booksLayout.createSequentialGroup()
                        .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(booksLayout.createSequentialGroup()
                        .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OfNew1)
                            .addComponent(OfCancel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OfSave1)
                            .addComponent(OfDelete1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OfUpdate1)))
                .addGap(27, 27, 27)
                .addGroup(booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, booksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BNameS, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel56, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BDateS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ORefresh1)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout BOOKSLayout = new javax.swing.GroupLayout(BOOKS.getContentPane());
        BOOKS.getContentPane().setLayout(BOOKSLayout);
        BOOKSLayout.setHorizontalGroup(
            BOOKSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(books, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BOOKSLayout.setVerticalGroup(
            BOOKSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(books, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(BOOKS, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 990, 610));

        HOME.setTitle("REGISTRATION");
        HOME.setVisible(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
        );

        PanelR.setBackground(new java.awt.Color(255, 255, 255));

        jLabel46.setText("Student ID");

        SID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIDActionPerformed(evt);
            }
        });

        SNameSearch.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SNameSearchCaretUpdate(evt);
            }
        });

        jLabel47.setText("Student Name");

        SNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNAMEActionPerformed(evt);
            }
        });

        OfNew.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfNew.setText("New");
        OfNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfNewActionPerformed(evt);
            }
        });

        OfCancel.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfCancel.setText("Cancel");
        OfCancel.setEnabled(false);
        OfCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfCancelActionPerformed(evt);
            }
        });

        OfSave.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfSave.setText(" Save New");
        OfSave.setEnabled(false);
        OfSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfSaveActionPerformed(evt);
            }
        });

        OfUpdate.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfUpdate.setText("Update");
        OfUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfUpdateActionPerformed(evt);
            }
        });

        OfDelete.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        OfDelete.setText("Delete");
        OfDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OfDeleteActionPerformed(evt);
            }
        });

        jLabel48.setText("Phone Number");

        STable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "S ID", "S Name", "Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        STable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                STableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(STable);

        ORefresh.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        ORefresh.setText("Refresh Table");
        ORefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ORefreshActionPerformed(evt);
            }
        });

        SNUM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNUMActionPerformed(evt);
            }
        });

        jLabel50.setText("Search by Name");

        jLabel51.setText("Search ID");

        SIDSearch.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SIDSearchCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout PanelRLayout = new javax.swing.GroupLayout(PanelR);
        PanelR.setLayout(PanelRLayout);
        PanelRLayout.setHorizontalGroup(
            PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelRLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ORefresh)
                .addGap(410, 410, 410))
            .addGroup(PanelRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelRLayout.createSequentialGroup()
                        .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelRLayout.createSequentialGroup()
                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SNAME))
                            .addGroup(PanelRLayout.createSequentialGroup()
                                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SID))
                            .addGroup(PanelRLayout.createSequentialGroup()
                                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SNUM)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelRLayout.createSequentialGroup()
                                .addComponent(OfNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OfCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelRLayout.createSequentialGroup()
                                .addComponent(OfSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OfDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(OfUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(331, 331, 331))
                    .addGroup(PanelRLayout.createSequentialGroup()
                        .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelRLayout.createSequentialGroup()
                                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SIDSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 945, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(16, Short.MAX_VALUE))))
        );
        PanelRLayout.setVerticalGroup(
            PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRLayout.createSequentialGroup()
                        .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SNUM, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelRLayout.createSequentialGroup()
                        .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OfNew)
                            .addComponent(OfCancel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OfSave)
                            .addComponent(OfDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OfUpdate)))
                .addGap(30, 30, 30)
                .addGroup(PanelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SIDSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(ORefresh)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout HOMELayout = new javax.swing.GroupLayout(HOME.getContentPane());
        HOME.getContentPane().setLayout(HOMELayout);
        HOMELayout.setHorizontalGroup(
            HOMELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HOMELayout.createSequentialGroup()
                .addComponent(PanelR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HOMELayout.setVerticalGroup(
            HOMELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(HOME, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 990, 610));

        SET.setTitle("SETTINGS");
        SET.setVisible(false);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        ps.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Librarian" }));
        ps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psActionPerformed(evt);
            }
        });

        jButton6.setText("CHANGE PASS");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel34.setText("CURRENT PASS");

        jLabel35.setText("NEW PASS");

        jLabel36.setText("REPEAT PASS");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ps, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cp)
                    .addComponent(np)
                    .addComponent(rp)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 817, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(np, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addContainerGap(272, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Change password", jPanel3);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        javax.swing.GroupLayout SETLayout = new javax.swing.GroupLayout(SET.getContentPane());
        SET.getContentPane().setLayout(SETLayout);
        SETLayout.setHorizontalGroup(
            SETLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        SETLayout.setVerticalGroup(
            SETLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(SET, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 990, 610));

        setB.setBackground(new java.awt.Color(255, 255, 255));
        setB.setForeground(new java.awt.Color(255, 255, 255));
        setB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/s_engineering_2/pkg2_bics_librarysys/cogs-one-big-and-two-small_318.png"))); // NOI18N
        setB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBActionPerformed(evt);
            }
        });
        jPanel1.add(setB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 140, 90));

        jLabel37.setBackground(new java.awt.Color(255, 255, 255));
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("SETTINGS");
        jLabel37.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(47, 80, 183), 2, true));
        jPanel1.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 140, 30));

        SERVICES.setTitle("SERVICES");
        SERVICES.setVisible(true);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Book ID");

        jLabel5.setText("Student ID");

        jLabel6.setText("Date Borrowed");

        jLabel8.setText("Date to Return");

        BIDS.setEditable(false);
        BIDS.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                BIDSCaretUpdate(evt);
            }
        });
        BIDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BIDSActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Book Search"));

        jTextField3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField3CaretUpdate(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Search");

        TSBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TSBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TSBookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TSBook);
        if (TSBook.getColumnModel().getColumnCount() > 0) {
            TSBook.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        BNew.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BNew.setText("New");
        BNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BNewActionPerformed(evt);
            }
        });

        BSave.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BSave.setText(" Save New");
        BSave.setEnabled(false);
        BSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSaveActionPerformed(evt);
            }
        });

        BUpdate.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BUpdate.setText("Update");
        BUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUpdateActionPerformed(evt);
            }
        });

        BDelete.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BDelete.setText("Delete");
        BDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDeleteActionPerformed(evt);
            }
        });

        BCancel.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BCancel.setText("Cancel");
        BCancel.setEnabled(false);
        BCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCancelActionPerformed(evt);
            }
        });

        jLabel10.setText("Borrow ID");

        BOID.setEditable(false);

        BoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "BorrowID", "Book ID", "Student", "Date Borrow", "Date to Return"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BoTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(BoTable);

        ORefresh2.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        ORefresh2.setText("Refresh Table");
        ORefresh2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ORefresh2ActionPerformed(evt);
            }
        });

        jLabel54.setText("Search by Student ID");

        BoSearch.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                BoSearchCaretUpdate(evt);
            }
        });

        hidX.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(SBID, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(BIDS, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(SBDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(SBRDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(BNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(BSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BOID, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(BoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(403, 403, 403)
                .addComponent(ORefresh2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hidX, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SBID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BIDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SBDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SBRDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BOID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BNew)
                            .addComponent(BCancel)
                            .addComponent(BUpdate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BSave)
                            .addComponent(BDelete)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hidX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ORefresh2))
                .addGap(8, 8, 8))
        );

        jTabbedPane1.addTab("Borrow", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jLabel81.setText("Book ID");

        jLabel97.setText("Student ID");

        jLabel102.setText("Date Returned");

        RBID.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                RBIDCaretUpdate(evt);
            }
        });
        RBID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBIDActionPerformed(evt);
            }
        });

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Book Search"));

        jTextField4.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField4CaretUpdate(evt);
            }
        });
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel105.setText("Search");

        TSBook1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TSBook1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TSBook1MouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(TSBook1);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel105, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel105, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        BNew1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BNew1.setText("New");
        BNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BNew1ActionPerformed(evt);
            }
        });

        BSave1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BSave1.setText(" Save New");
        BSave1.setEnabled(false);
        BSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSave1ActionPerformed(evt);
            }
        });

        BUpdate1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BUpdate1.setText("Update");
        BUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUpdate1ActionPerformed(evt);
            }
        });

        BCancel1.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        BCancel1.setText("Cancel");
        BCancel1.setEnabled(false);
        BCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCancel1ActionPerformed(evt);
            }
        });

        jLabel106.setText("Return ID");

        ROID.setEditable(false);

        RoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ReturnID", "Book ID", "Student ID", "Date Returned"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RoTableMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(RoTable);

        ORefresh5.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        ORefresh5.setText("Refresh Table");
        ORefresh5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ORefresh5ActionPerformed(evt);
            }
        });

        jLabel107.setText("Search by Student ID");

        BoSearch1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                BoSearch1CaretUpdate(evt);
            }
        });

        hidX1.setEditable(false);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel19Layout.createSequentialGroup()
                                    .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(RSBID, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel19Layout.createSequentialGroup()
                                    .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(RBID, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel19Layout.createSequentialGroup()
                                    .addComponent(jLabel102, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(RDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel19Layout.createSequentialGroup()
                                .addComponent(BNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BCancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel19Layout.createSequentialGroup()
                                .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ROID, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel19Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(BoSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(403, 403, 403)
                .addComponent(ORefresh5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hidX1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RSBID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RBID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel102, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ROID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BNew1)
                            .addComponent(BCancel1)
                            .addComponent(BUpdate1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BSave1))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BoSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ORefresh5)
                    .addComponent(hidX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Return", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        BoTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "BorrowID", "Book ID", "Student", "Date Borrow", "Date to Return"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BoTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BoTable1MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(BoTable1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Overdue", jPanel6);

        javax.swing.GroupLayout SERVICESLayout = new javax.swing.GroupLayout(SERVICES.getContentPane());
        SERVICES.getContentPane().setLayout(SERVICESLayout);
        SERVICESLayout.setHorizontalGroup(
            SERVICESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        SERVICESLayout.setVerticalGroup(
            SERVICESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jPanel1.add(SERVICES, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 990, 610));

        LOGOUT.setText("LOG OUT");
        LOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGOUTActionPerformed(evt);
            }
        });
        jPanel1.add(LOGOUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 30, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        listAllComponentsIn(jPanel1,HOME);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void evBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evBActionPerformed
        // TODO add your handling code here:
        listAllComponentsIn(jPanel1,BOOKS);
        //FillTable(TableEv,"select Eid,Dfrom,Dto,Details from events");
    }//GEN-LAST:event_evBActionPerformed

    private void finBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finBActionPerformed
        // TODO add your handling code here:
        listAllComponentsIn(jPanel1,SERVICES);
    
    }//GEN-LAST:event_finBActionPerformed

    private void setBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setBActionPerformed
        // TODO add your handling code here:
        listAllComponentsIn(jPanel1,SET);
    }//GEN-LAST:event_setBActionPerformed

    public void listAllComponentsIn(Container parent, JInternalFrame F)
{
  //  Component component = null; // Stores a Component

//Container myContainer;
//myContainer = parent.getContentPane();
Component myCA[] = parent.getComponents();

        for (Component myCA1 : myCA) 
        {
            if (myCA1 instanceof JInternalFrame) {
                JInternalFrame tempTf = (JInternalFrame) myCA1;
                if(tempTf == F)
                {
                   F.setVisible(true);
                }
                else 
                {
                    tempTf.dispose();
                }
            }
        }
}
    
    
    void Starting()
{
          listAllComponentsIn(jPanel1,HOME);
           this.setExtendedState(this.getExtendedState() | menu.MAXIMIZED_BOTH);
           hidX.setVisible(false);
           FillTable(BoTable1,"SELECT BOID,`BookID`, `StudentID`, `DateBo`, `DateRe` FROM `borrow` INNER JOIN book ON BID = BookID"+
                   " WHERE (DateRe < NOW() or DateRe BETWEEN NOW() AND TIMESTAMPADD(HOUR, 24, NOW())) and book.Status = 'TAKEN'");
}
    private void LOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGOUTActionPerformed
        // TODO add your handling code here:
        login lg = new login();
        lg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LOGOUTActionPerformed

    private void SIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SIDActionPerformed

    private void SNameSearchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_SNameSearchCaretUpdate
        // TODO add your handling code here:
        FillTableSH(STable,"SELECT `SID`, `SName`, `Phone` from `student` where SName LIKE ?",SNameSearch);

    }//GEN-LAST:event_SNameSearchCaretUpdate

    private void SNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SNAMEActionPerformed

    private void OfNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfNewActionPerformed
        // TODO add your handling code here:
        NewR(PanelR);
        OfUpdate.setEnabled(false);
        OfCancel.setEnabled(true);
        OfSave.setEnabled(true);
        OfDelete.setEnabled(false);
    }//GEN-LAST:event_OfNewActionPerformed

    private void OfCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfCancelActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String sql = "select * FROM student";
            con.st = con.cn.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
            con.rs = con.st.executeQuery(sql);
            if(con.rs.first()) {
                SID.setText(Integer.toString(con.rs.getInt(1)));
                SNAME.setText(con.rs.getString(2));
                SNUM.setText(con.rs.getString(3));
                
                OfUpdate.setEnabled(true);
                OfCancel.setEnabled(false);
                OfSave.setEnabled(false);
                OfDelete.setEnabled(true);
            }
            con.cn.close();
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_OfCancelActionPerformed

    private void OfSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfSaveActionPerformed
        // TODO add your handling code here:

        try {
            con.init();
            String sql = "INSERT INTO `student`(`SID`, `SName`,`Phone`) VALUES (?,?,?)";
            // java.sql.Date date1 = new java.sql.Date(FromEv.getDate().getTime());
            //java.sql.Date date2 = new java.sql.Date(ToEv.getDate().getTime());
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setInt(1, Integer.parseInt(SID.getText()));
             con.pst.setString(2,SNAME.getText());
            con.pst.setString(3,SNUM.getText());
            con.pst.execute();
            OfUpdate.setEnabled(true);
            OfCancel.setEnabled(false);
            OfSave.setEnabled(false);
            OfDelete.setEnabled(true);
            JOptionPane.showMessageDialog(null, "NEW RECORD SAVED");
            con.cn.close();
            FillTable(STable,"SELECT `SID`, `SName`, `Phone` from `student`");
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_OfSaveActionPerformed

    private void OfUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfUpdateActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String query = "UPDATE student SET SName = ?, Phone = ? WHERE SID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setString   (1, SNAME.getText());
            
 con.pst.setString   (2, SNUM.getText());
 con.pst.setString   (3, SID.getText());
            con.pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"RECORD UPDATED SUCCESSFULLY");
            con.cn.close();
            FillTable(STable,"SELECT `SID`, `SName`, `Phone` from `student`");
           
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_OfUpdateActionPerformed

    private void OfDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfDeleteActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String query = "DELETE FROM student WHERE SID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setInt  (1, Integer.parseInt(SID.getText()));
            con.pst.executeUpdate();
            con.cn.close();
            JOptionPane.showMessageDialog(null, "Record Deleted");
            FillTable(STable,"SELECT `SID`, `SName`, `Phone` from `student`");
          
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_OfDeleteActionPerformed

    private void STableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_STableMouseClicked
        // TODO add your handling code here:
        int selectedRow = STable.getSelectedRow();
        String hid = STable.getValueAt(selectedRow, 0).toString();
        try {
            con.init();
            String sql = "select * FROM student WHERE SID = ?";
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1,hid);
            con.rs = con.pst.executeQuery();
            if(con.rs.next()) {
                SID.setText(Integer.toString(con.rs.getInt(1)));
                SNAME.setText(con.rs.getString(2));
                SNUM.setText(con.rs.getString(3));
            }
            con.cn.close();

        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }

    }//GEN-LAST:event_STableMouseClicked

    private void ORefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ORefreshActionPerformed
        // TODO add your handling code here:
        FillTable(STable,"SELECT `SID`, `SName`, `Phone` from `student`");
    }//GEN-LAST:event_ORefreshActionPerformed

    private void SNUMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNUMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SNUMActionPerformed

    
    public void FillTableSH(JTable table, String Query,JTextField fd)
{
    try
    {
        con.init();
       con.pst = con.cn.prepareStatement(Query);
       con.pst.setString(1, "%" + fd.getText() + "%");
       //con.pst.setString(2, "%" + se1.getText() + "%");
       ResultSet rs = con.pst.executeQuery();
       
        //To remove previously added rows
        while(table.getRowCount() > 0) 
        {
            ((DefaultTableModel) table.getModel()).removeRow(0);
        }
        int columns = rs.getMetaData().getColumnCount();
        while(rs.next())
        {  
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++)
            {  
                row[i - 1] = rs.getObject(i);
            }
            ((DefaultTableModel) table.getModel()).insertRow(rs.getRow()-1,row);
        }

        con.cn.close();
    }
    catch(SQLException e)
    {
        JOptionPane.showMessageDialog(this,e);
    }
}   
    
    private void BIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BIDActionPerformed

    private void BNameSCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_BNameSCaretUpdate
        // TODO add your handling code here:
        FillTableSH(BTable,"SELECT `BID`, `BName`, `BDate` FROM `book` where BName LIKE ?",BNameS);
    }//GEN-LAST:event_BNameSCaretUpdate

    private void BNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BNameActionPerformed

    private void OfNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfNew1ActionPerformed
        // TODO add your handling code here:
        NewR(books);
        OfUpdate1.setEnabled(false);
        OfCancel1.setEnabled(true);
        OfSave1.setEnabled(true);
        OfDelete1.setEnabled(false);
    }//GEN-LAST:event_OfNew1ActionPerformed

    public void NewR(Container parent)
{
  
Component myCA[] = parent.getComponents();

        for (Component myCA1 : myCA) 
        {
            if (myCA1 instanceof JTextField) {
                JTextField tempTf = (JTextField) myCA1;
               tempTf.setText("");
            }
        }
}
    
    private void OfCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfCancel1ActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String sql = "select * FROM book";
            con.st = con.cn.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
            con.rs = con.st.executeQuery(sql);
            if(con.rs.first()) {
                BID.setText(Integer.toString(con.rs.getInt(1)));
                BName.setText(con.rs.getString(2));
                BDate.setDate(con.rs.getDate(3));
              
                OfUpdate1.setEnabled(true);
                OfCancel1.setEnabled(false);
                OfSave1.setEnabled(false);
                OfDelete1.setEnabled(true);
            }
            con.cn.close();
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_OfCancel1ActionPerformed

    public void FillTable(JTable table, String Query)
{
    try
    {
        con.init();
       PreparedStatement pstmt = con.cn.prepareStatement(Query);
       ResultSet rs = pstmt.executeQuery();
        
        //To remove previously added rows
        while(table.getRowCount() > 0) 
        {
            ((DefaultTableModel) table.getModel()).removeRow(0);
        }
        int columns = rs.getMetaData().getColumnCount();
        while(rs.next())
        {  
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++)
            {  
                row[i - 1] = rs.getObject(i);
            }
            ((DefaultTableModel) table.getModel()).insertRow(rs.getRow()-1,row);
        }

        con.cn.close();
    }
    catch(SQLException e)
    {
        JOptionPane.showMessageDialog(this,e);
    }
}   
         public void FillTableS(JTable table, String Query,JTextField se1)
{
    try
    {
        con.init();
       con.pst = con.cn.prepareStatement(Query);
       con.pst.setString(1, "%" + se1.getText() + "%");
       ResultSet rs = con.pst.executeQuery();
       
        //To remove previously added rows
        while(table.getRowCount() > 0) 
        {
            ((DefaultTableModel) table.getModel()).removeRow(0);
        }
        int columns = rs.getMetaData().getColumnCount();
        while(rs.next())
        {  
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++)
            {  
                row[i - 1] = rs.getObject(i);
            }
            ((DefaultTableModel) table.getModel()).insertRow(rs.getRow()-1,row);
        }

        con.cn.close();
    }
    catch(SQLException e)
    {
        JOptionPane.showMessageDialog(this,e);
    }
}   
     public void FillTableSS(JTable table, String Query,JTextField se1)
{
    try
    {
        con.init();
       con.pst = con.cn.prepareStatement(Query);
       con.pst.setString(1, se1.getText());
       ResultSet rs = con.pst.executeQuery();
       
        //To remove previously added rows
        while(table.getRowCount() > 0) 
        {
            ((DefaultTableModel) table.getModel()).removeRow(0);
        }
        int columns = rs.getMetaData().getColumnCount();
        while(rs.next())
        {  
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++)
            {  
                row[i - 1] = rs.getObject(i);
            }
            ((DefaultTableModel) table.getModel()).insertRow(rs.getRow()-1,row);
        }

        con.cn.close();
    }
    catch(SQLException e)
    {
        JOptionPane.showMessageDialog(this,e);
    }
}   
    
    private void OfSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfSave1ActionPerformed
        // TODO add your handling code here:

        try {
            con.init();
            String sql = "INSERT INTO `book`(`BName`, `BDate`,Status) VALUES (?,?,'FREE')";
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1, BName.getText());
            java.sql.Date date1 = new java.sql.Date(BDate.getDate().getTime());
            con.pst.setDate(2,date1);
            con.pst.execute();
            OfUpdate1.setEnabled(true);
            OfCancel1.setEnabled(false);
            OfSave1.setEnabled(false);
            OfDelete1.setEnabled(true);
            JOptionPane.showMessageDialog(null, "NEW RECORD SAVED");
            con.cn.close();
            FillTable(BTable,"SELECT `BID`, `BName`, `BDate` FROM `book`");
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_OfSave1ActionPerformed

    private void OfUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfUpdate1ActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String query = "UPDATE offering SET BName = ?, BDate = ? WHERE BID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setString   (1, BName.getText());
            java.sql.Date date2 = new java.sql.Date(BDate.getDate().getTime());
            con.pst.setDate(2,  date2);
            con.pst.setInt   (3, Integer.parseInt(BID.getText()));

            con.pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"RECORD UPDATED SUCCESSFULLY");
            con.cn.close();
            FillTable(BTable,"SELECT `BID`, `BName`, `BDate` FROM `book`");
           
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_OfUpdate1ActionPerformed

    private void OfDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OfDelete1ActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String query = "DELETE FROM book WHERE BID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setInt  (1, Integer.parseInt(BID.getText()));
            con.pst.executeUpdate();
            con.cn.close();
            JOptionPane.showMessageDialog(null, "Record Deleted");
            FillTable(BTable,"SELECT `BID`, `BName`, `BDate` FROM `book`");
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_OfDelete1ActionPerformed

    private void BTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = BTable.getSelectedRow();
        String hid = BTable.getValueAt(selectedRow, 0).toString();
        try {
            con.init();
            String sql = "select * FROM book WHERE BID = ?";
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1,hid);
            con.rs = con.pst.executeQuery();
            if(con.rs.next()) {
                BID.setText(Integer.toString(con.rs.getInt(1)));
                BName.setText(con.rs.getString(2));
                BDate.setDate(con.rs.getDate(3));
            }
            con.cn.close();

        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }

    }//GEN-LAST:event_BTableMouseClicked

    private void ORefresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ORefresh1ActionPerformed
        // TODO add your handling code here:
         FillTable(BTable,"SELECT `BID`, `BName`, `BDate` FROM `book`");
    }//GEN-LAST:event_ORefresh1ActionPerformed

    private void BDateSPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_BDateSPropertyChange
        // TODO add your handling code here:
        if ("date".equals(evt.getPropertyName()))
        {
            String sql="select `BID`, `BName`, `BDate` FROM `book` WHERE BDate = ?";
            FillTableDate(BTable,sql,BDateS);
        }
    }//GEN-LAST:event_BDateSPropertyChange

    public void FillTableDate(JTable table, String Query,JDateChooser DT)
{
    try
    {
      
        con.init();
       con.pst = con.cn.prepareStatement(Query);
       java.sql.Date date2 = new java.sql.Date(DT.getDate().getTime());
   
       con.pst.setDate(1,  date2);
       //con.pst.setTimestamp(2, date2);
       
       ResultSet rs = con.pst.executeQuery();
       
        //To remove previously added rows
        while(table.getRowCount() > 0) 
        {
            ((DefaultTableModel) table.getModel()).removeRow(0);
        }
        int columns = rs.getMetaData().getColumnCount();
        while(rs.next())
        {  
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++)
            {  
                row[i - 1] = rs.getObject(i);
            }
            ((DefaultTableModel) table.getModel()).insertRow(rs.getRow()-1,row);
        }

        con.cn.close();
    }
    catch(SQLException e)
    {
        JOptionPane.showMessageDialog(this,e);
    }
}   
    
    private void psActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_psActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
       ConfirmExistingPass();
    }//GEN-LAST:event_jButton6ActionPerformed

    public void ConfirmExistingPass(){
        try{
            con.init();
            con.pst = con.cn.prepareStatement("SELECT * FROM staff WHERE Name = ? and Pass = ?");
            con.pst.setString(1, ps.getSelectedItem().toString());
            con.pst.setString(2,cp.getText());
            con.rs = con.pst.executeQuery();
            if(cp.getText().length()>0){
                if(con.rs.next()){
                    ChangePass();
                                  }
                else{
                JOptionPane.showMessageDialog(null,"CURRENT PASS IS INCORRECT!");
                }}
            else
            {
                JOptionPane.showMessageDialog(null,"CURRENT PASS IS EMPTY! PLEASE FILL IN THE DETAILS");
            }
        con.cn.close();
       } 
      catch (SQLException ex) {
          JOptionPane.showMessageDialog(null, ex);
           
        }
     }
void ChangePass()
{
     try{
         con.init(); 
            String query = "update staff set Pass = ? where Name = ?";
      con.pst = con.cn.prepareStatement(query);
      
      if(rp.getText().length()>0 || np.getText().length()>0)
      {
      if(np.getText() == null ? rp.getText() == null : np.getText().equals(rp.getText()))
      {
           con.pst.setString   (1,rp.getText());
          con.pst.setString(2, ps.getSelectedItem().toString());
         
      con.pst.executeUpdate();
      JOptionPane.showMessageDialog(null,"PASSWORD SUCCESFULLY CHANGED");
      }
      else
      {
          JOptionPane.showMessageDialog(null,"PASSWORDS DO NOT MATCH");
      }
      }
      else
      {
          JOptionPane.showMessageDialog(null,"EMPTY FIELDS DETECTED! PLEASE FILL IN THE DETAILS");
      }
       con.cn.close();
            }   
    
      catch (SQLException ex) {
          JOptionPane.showMessageDialog(null, ex);
            
        }
}
    
    private void SIDSearchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_SIDSearchCaretUpdate
        // TODO add your handling code here:
         FillTableSH(STable,"SELECT `SID`, `SName`, `Phone` from `student` where SID LIKE ?",SIDSearch);
    }//GEN-LAST:event_SIDSearchCaretUpdate

    private void BIDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BIDSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BIDSActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void BNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BNewActionPerformed
        // TODO add your handling code here:
        NewR(jPanel4);
        BUpdate.setEnabled(false);
        BCancel.setEnabled(true);
        BSave.setEnabled(true);
        BDelete.setEnabled(false);
    }//GEN-LAST:event_BNewActionPerformed

    private void BSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSaveActionPerformed
        // TODO add your handling code here:

        try {
            con.init();
            String sql = "INSERT INTO `borrow`(`BookID`, `StudentID`, `DateBo`, `DateRe`) VALUES (?,?,?,?)";
            // java.sql.Date date1 = new java.sql.Date(FromEv.getDate().getTime());
            //java.sql.Date date2 = new java.sql.Date(ToEv.getDate().getTime());
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1, BIDS.getText());
             con.pst.setString(2, SBID.getText());
            java.sql.Date date1 = new java.sql.Date(SBDate.getDate().getTime());
            java.sql.Date date2 = new java.sql.Date(SBRDate.getDate().getTime());
            con.pst.setDate(3,date1);
             con.pst.setDate(4,date2);
            con.pst.execute();
            BUpdate.setEnabled(true);
            BCancel.setEnabled(false);
            BSave.setEnabled(false);
            BDelete.setEnabled(true);
            JOptionPane.showMessageDialog(null, "NEW RECORD SAVED");
            con.cn.close();
            FillTable(BoTable,"SELECT BOID,`BookID`, `StudentID`, `DateBo`, `DateRe` FROM `borrow`");
            BookUpdate();
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_BSaveActionPerformed

    void BookUpdate()
    {
        try {
            con.init();
            String query = "UPDATE book SET Status = 'TAKEN' WHERE BID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setInt   (1, Integer.parseInt(BIDS.getText()));
            con.pst.executeUpdate();
            con.cn.close();
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }

    }
    void BookUpdateU()
    {
        try {
            con.init();
            String query = "UPDATE book SET Status = 'FREE' WHERE BID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setInt   (1, Integer.parseInt(hidX.getText()));
            con.pst.executeUpdate();
            con.cn.close();
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }

    }
    
    private void BUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUpdateActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String query = "UPDATE borrow SET `BookID` = ?,`StudentID`= ?,`DateBo`= ?,DateRe = ? WHERE BOID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setString   (1, BIDS.getText());
             con.pst.setString   (2, SBID.getText());
            java.sql.Date date2 = new java.sql.Date(SBDate.getDate().getTime());
            java.sql.Date date3 = new java.sql.Date(SBRDate.getDate().getTime());
            con.pst.setDate(3,  date2);
             con.pst.setDate(4,  date3);
            con.pst.setInt   (5, Integer.parseInt(BOID.getText()));
            con.pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"RECORD UPDATED SUCCESSFULLY");
            con.cn.close();
          FillTable(BoTable,"SELECT BOID,`BookID`, `StudentID`, `DateBo`, `DateRe` FROM `borrow`");
          BookUpdateU();
          BookUpdate();
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_BUpdateActionPerformed

    private void BDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDeleteActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String query = "DELETE FROM borrow WHERE BOID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setInt  (1, Integer.parseInt(BOID.getText()));
            con.pst.executeUpdate();
            con.cn.close();
            JOptionPane.showMessageDialog(null, "Record Deleted");
            FillTable(BoTable,"SELECT BOID,`BookID`, `StudentID`, `DateBo`, `DateRe` FROM `borrow`");
            BookUpdateU();
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_BDeleteActionPerformed

    private void BCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCancelActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String sql = "select * FROM borrow";
            con.st = con.cn.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
            con.rs = con.st.executeQuery(sql);
            if(con.rs.first()) {
                BOID.setText(Integer.toString(con.rs.getInt(1)));
               
                BIDS.setText(con.rs.getString(2));
                SBID.setText(con.rs.getString(3));
                SBDate.setDate(con.rs.getDate(4));
                SBRDate.setDate(con.rs.getDate(5));
                BUpdate.setEnabled(true);
                BCancel.setEnabled(false);
                BSave.setEnabled(false);
                BDelete.setEnabled(true);
            }
            con.cn.close();
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_BCancelActionPerformed

    private void jTextField3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField3CaretUpdate
        // TODO add your handling code here:
        FillTableSH(TSBook,"SELECT `BID`, `BName` FROM `book` where Status = 'FREE' and BName LIKE ?",jTextField3);
        
    }//GEN-LAST:event_jTextField3CaretUpdate

    private void TSBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TSBookMouseClicked
        // TODO add your handling code here:
           int selectedRow = TSBook.getSelectedRow();
              String hid = TSBook.getValueAt(selectedRow, 0).toString();
         try {
            con.init();
            String sql = "select * FROM book WHERE BID = ?";
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1,hid);
            con.rs = con.pst.executeQuery();
            if(con.rs.next()) {
               BIDS.setText(Integer.toString(con.rs.getInt(1)));
            }
            con.cn.close();
           
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }   
    }//GEN-LAST:event_TSBookMouseClicked

    private void BoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = BoTable.getSelectedRow();
        String hid = BoTable.getValueAt(selectedRow, 0).toString();
        try {
            con.init();
            String sql = "select * FROM borrow WHERE BOID = ?";
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1,hid);
            con.rs = con.pst.executeQuery();
            if(con.rs.next()) {
               BOID.setText(Integer.toString(con.rs.getInt(1)));
               
                BIDS.setText(con.rs.getString(2));
                SBID.setText(con.rs.getString(3));
                SBDate.setDate(con.rs.getDate(4));
                SBRDate.setDate(con.rs.getDate(5));
                hidX.setText(BIDS.getText());
            }
            con.cn.close();

        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }

    }//GEN-LAST:event_BoTableMouseClicked

    private void ORefresh2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ORefresh2ActionPerformed
        // TODO add your handling code here:
   FillTable(BoTable,"SELECT BOID,`BookID`, `StudentID`, `DateBo`, `DateRe` FROM `borrow`");
    }//GEN-LAST:event_ORefresh2ActionPerformed

    private void BIDSCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_BIDSCaretUpdate
        // TODO add your handling code here:
      
    }//GEN-LAST:event_BIDSCaretUpdate

    private void BoSearchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_BoSearchCaretUpdate
        // TODO add your handling code here:
        FillTableSH(BoTable,"SELECT BOID,`BookID`, `StudentID`, `DateBo`, `DateRe` FROM borrow where StudentID LIKE ?",BoSearch);
    }//GEN-LAST:event_BoSearchCaretUpdate

    private void RBIDCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_RBIDCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_RBIDCaretUpdate

    private void RBIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RBIDActionPerformed

    private void jTextField4CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField4CaretUpdate
        // TODO add your handling code here:
        FillTableSH(TSBook1,"SELECT `BID`, `BName` FROM `book` where Status = 'TAKEN' and BName LIKE ?",jTextField4);
    }//GEN-LAST:event_jTextField4CaretUpdate

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void TSBook1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TSBook1MouseClicked
        // TODO add your handling code here:
        int selectedRow = TSBook1.getSelectedRow();
        String hid = TSBook1.getValueAt(selectedRow, 0).toString();
        try {
            con.init();
            String sql = "select * FROM book WHERE BID = ?";
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1,hid);
            con.rs = con.pst.executeQuery();
            if(con.rs.next()) {
                RBID.setText(Integer.toString(con.rs.getInt(1)));
            }
            con.cn.close();

        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_TSBook1MouseClicked

    private void BNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BNew1ActionPerformed
        // TODO add your handling code here:
        NewR(jPanel19);
        BUpdate1.setEnabled(false);
        BCancel1.setEnabled(true);
        BSave1.setEnabled(true);
        //BDelete1.setEnabled(false);
    }//GEN-LAST:event_BNew1ActionPerformed

    private void BSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSave1ActionPerformed
        // TODO add your handling code here:

        try {
            con.init();
            String sql = "INSERT INTO `return`(`BookID`, `StudentID`, `DateReturned`) VALUES (?,?,?)";
            // java.sql.Date date1 = new java.sql.Date(FromEv.getDate().getTime());
            //java.sql.Date date2 = new java.sql.Date(ToEv.getDate().getTime());
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1, RBID.getText());
            con.pst.setString(2, RSBID.getText());
            java.sql.Date date1 = new java.sql.Date(RDate.getDate().getTime());
            con.pst.setDate(3,date1);
            con.pst.execute();
            BUpdate1.setEnabled(true);
            BCancel1.setEnabled(false);
            BSave1.setEnabled(false);
//            BDelete1.setEnabled(true);
            JOptionPane.showMessageDialog(null, "NEW RECORD SAVED");
            con.cn.close();
            FillTable(RoTable,"SELECT `RID`, `BookID`, `StudentID`, `DateReturned` FROM `return`");
           returnB();
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_BSave1ActionPerformed

    void returnB()
    {
        try {
            con.init();
            String query = "UPDATE book SET Status = 'FREE' WHERE BID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setInt   (1, Integer.parseInt(RBID.getText()));
            con.pst.executeUpdate();
            con.cn.close();
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }

    }
    
    private void BUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUpdate1ActionPerformed
        // TODO add your handling code here:
        try {
            con.init();
            String query = "UPDATE `return` SET `BookID` = ?,`StudentID`= ?,`DateReturned`= ? WHERE RID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setString   (1, RBID.getText());
            con.pst.setString   (2, RSBID.getText());
            java.sql.Date date2 = new java.sql.Date(RDate.getDate().getTime());
            con.pst.setDate(3,  date2);
            con.pst.setInt   (4, Integer.parseInt(ROID.getText()));
            con.pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"RECORD UPDATED SUCCESSFULLY");
            con.cn.close();
            FillTable(RoTable,"SELECT `RID`, `BookID`, `StudentID`, `DateReturned` FROM `return`");
            returnB();
           returnBU();
           
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_BUpdate1ActionPerformed

    void returnBU()
    {
        try {
            con.init();
            String query = "UPDATE book SET Status = 'FREE' WHERE BID = ?";
            con.pst = con.cn.prepareStatement(query);
            con.pst.setInt   (1, Integer.parseInt(hidX1.getText()));
            con.pst.executeUpdate();
            con.cn.close();
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }
    
    private void BCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCancel1ActionPerformed
        // TODO add your handling code heu:
        try {
            con.init();
            String sql = "select * FROM `return`";
            con.st = con.cn.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
            con.rs = con.st.executeQuery(sql);
            if(con.rs.first()) {
                ROID.setText(Integer.toString(con.rs.getInt(1)));

                RBID.setText(con.rs.getString(2));
                RSBID.setText(con.rs.getString(3));
                RDate.setDate(con.rs.getDate(4));
                BUpdate1.setEnabled(true);
                BCancel1.setEnabled(false);
                BSave1.setEnabled(false);
//                BDelete1.setEnabled(true);
            }
            con.cn.close();
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_BCancel1ActionPerformed

    private void RoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = RoTable.getSelectedRow();
        String hid = RoTable.getValueAt(selectedRow, 0).toString();
        try {
            con.init();
            String sql = "select * FROM `return` WHERE RID = ?";
            con.pst = con.cn.prepareStatement(sql);
            con.pst.setString(1,hid);
            con.rs = con.pst.executeQuery();
            if(con.rs.next()) {
                ROID.setText(Integer.toString(con.rs.getInt(1)));

                RBID.setText(con.rs.getString(2));
                RSBID.setText(con.rs.getString(3));
                RDate.setDate(con.rs.getDate(4));
               
            }
            con.cn.close();
            hidX1.setText(RBID.getText());
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_RoTableMouseClicked

    private void ORefresh5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ORefresh5ActionPerformed
        // TODO add your handling code here:
        FillTable(RoTable,"SELECT `RID`, `BookID`, `StudentID`, `DateReturned` FROM `return`");
    }//GEN-LAST:event_ORefresh5ActionPerformed

    private void BoSearch1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_BoSearch1CaretUpdate
        // TODO add your handling code here:
        FillTableSH(RoTable,"SELECT `RID`, `BookID`, `StudentID`, `DateReturned` FROM `return` where StudentID LIKE ?",BoSearch1);
    }//GEN-LAST:event_BoSearch1CaretUpdate

    private void BoTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BoTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BCancel;
    private javax.swing.JButton BCancel1;
    private com.toedter.calendar.JDateChooser BDate;
    private com.toedter.calendar.JDateChooser BDateS;
    private javax.swing.JButton BDelete;
    private javax.swing.JTextField BID;
    private javax.swing.JTextField BIDS;
    private javax.swing.JTextField BName;
    private javax.swing.JTextField BNameS;
    private javax.swing.JButton BNew;
    private javax.swing.JButton BNew1;
    private javax.swing.JTextField BOID;
    private javax.swing.JInternalFrame BOOKS;
    private javax.swing.JButton BSave;
    private javax.swing.JButton BSave1;
    private javax.swing.JTable BTable;
    private javax.swing.JButton BUpdate;
    private javax.swing.JButton BUpdate1;
    private javax.swing.JTextField BoSearch;
    private javax.swing.JTextField BoSearch1;
    private javax.swing.JTable BoTable;
    private javax.swing.JTable BoTable1;
    private javax.swing.JInternalFrame HOME;
    private javax.swing.JButton LOGOUT;
    private javax.swing.JButton ORefresh;
    private javax.swing.JButton ORefresh1;
    private javax.swing.JButton ORefresh2;
    private javax.swing.JButton ORefresh5;
    private javax.swing.JButton OfCancel;
    private javax.swing.JButton OfCancel1;
    private javax.swing.JButton OfDelete;
    private javax.swing.JButton OfDelete1;
    private javax.swing.JButton OfNew;
    private javax.swing.JButton OfNew1;
    private javax.swing.JButton OfSave;
    private javax.swing.JButton OfSave1;
    private javax.swing.JButton OfUpdate;
    private javax.swing.JButton OfUpdate1;
    private javax.swing.JPanel PanelR;
    private javax.swing.JTextField RBID;
    private com.toedter.calendar.JDateChooser RDate;
    private javax.swing.JTextField ROID;
    private javax.swing.JTextField RSBID;
    private javax.swing.JTable RoTable;
    private com.toedter.calendar.JDateChooser SBDate;
    private javax.swing.JTextField SBID;
    private com.toedter.calendar.JDateChooser SBRDate;
    private javax.swing.JInternalFrame SERVICES;
    private javax.swing.JInternalFrame SET;
    private javax.swing.JTextField SID;
    private javax.swing.JTextField SIDSearch;
    private javax.swing.JTextField SNAME;
    private javax.swing.JTextField SNUM;
    private javax.swing.JTextField SNameSearch;
    private javax.swing.JTable STable;
    private javax.swing.JTable TSBook;
    private javax.swing.JTable TSBook1;
    private javax.swing.JPanel books;
    private javax.swing.JTextField cp;
    private javax.swing.JButton evB;
    private javax.swing.JButton finB;
    private javax.swing.JTextField hidX;
    private javax.swing.JTextField hidX1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField np;
    private javax.swing.JComboBox<String> ps;
    private javax.swing.JTextField rp;
    private javax.swing.JButton setB;
    // End of variables declaration//GEN-END:variables
}
